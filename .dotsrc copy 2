# ===========================================================================
# DOTS RC - Universal shell configuration loader
# Supports: bash, zsh, sh, fish, PowerShell, Nushell
# ===========================================================================

# === POSIX SHELLS (bash, zsh, sh) ===
if [ -n "${BASH_VERSION:-}${ZSH_VERSION:-}${POSH_VERSION:-}" ]; then
  #@ Determine shell type for cleaner messaging
  if [ -n "${BASH_VERSION:-}" ]; then
    SHELL_NAME="bash"
    CONFIG_FILE="bashrc"
  elif [ -n "${ZSH_VERSION:-}" ]; then
    SHELL_NAME="zsh"
    CONFIG_FILE="zshrc"
  else
    SHELL_NAME="sh"
    CONFIG_FILE="shrc"
  fi

  printf "VERBOSE: Attempting to initialize DOTS for shell: %s...\n" "${SHELL_NAME}"

  #@ Validate DOTS environment variable
  if [ -z "${DOTS:-}" ]; then
    printf "ERROR: DOTS environment variable must be set\n" >&2
    return 1 2>/dev/null || exit 1
  fi

  #@ Validate DOTS directory exists
  if [ ! -d "$DOTS" ]; then
    printf "ERROR: DOTS directory '%s' does not exist\n" "$DOTS" >&2;
    return 1 2>/dev/null || exit 1
  fi

  #@ Load shell-specific configuration
  CONFIG_PATH="$DOTS/$CONFIG_FILE"
  if [ -f "$CONFIG_PATH" ]; then
    . "$CONFIG_PATH"
    printf "INFORMATION: Initialized DOTS using '%s'\n" "$CONFIG_FILE"
  else
    printf "WARNING: Configuration file '%s' not found\n" "$CONFIG_PATH" >&2
  fi

  return 0 2>/dev/null || exit 0
fi

# === FISH SHELL ===
# Fish ignores lines starting with '#' except when they start with '#;'
#; if not set -q DOTS; echo "ERROR: DOTS environment variable must be set" >&2; exit 1; end; if not test -d $DOTS; echo "ERROR: DOTS directory '$DOTS' does not exist" >&2; exit 1; end; echo "Loading fish configuration..."; set config_file $DOTS/fishrc; if test -f $config_file; source $config_file; echo "✓ Loaded fishrc"; else; echo "WARNING: Configuration file '$config_file' not found" >&2; end; exit 0

# === POWERSHELL ===
<#
.SYNOPSIS
    PowerShell configuration loader for polyglot RC
.DESCRIPTION
    Loads PowerShell profile from the DOTS directory
#>

#@ Validate DOTS environment variable
if (-not $env:DOTS) {
    Write-Error "ERROR: DOTS environment variable must be set"
    exit 1
}

#@ Validate DOTS directory exists
if (-not (Test-Path $env:DOTS -PathType Container)) {
    Write-Error "ERROR: DOTS directory '$env:DOTS' does not exist"
    exit 1
}

Write-Host "Loading PowerShell configuration..." -ForegroundColor Cyan

#@ Load PowerShell profile
$profileFile = Join-Path $env:DOTS 'powershell_profile.ps1'
if (Test-Path $profileFile -PathType Leaf) {
    try {
        . $profileFile
        Write-Host "✓ Loaded powershell_profile.ps1" -ForegroundColor Green
    }
    catch {
        Write-Error "ERROR: Failed to load PowerShell profile: $_"
        exit 1
    }
}
else {
    Write-Warning "WARNING: Configuration file '$profileFile' not found"
}

exit 0

# === NUSHELL ===
# Nushell ignores lines starting with '#' except when they start with '#nu'
#nu if ($env.DOTS == null) { print "ERROR: DOTS environment variable must be set" | ansi red; exit 1 }; if not ($env.DOTS | path exists) { print $"ERROR: DOTS directory '($env.DOTS)' does not exist" | ansi red; exit 1 }; print "Loading Nushell configuration..." | ansi cyan; let config_file = $"($env.DOTS)/nushell_config.nu"; if ($config_file | path exists) { source $config_file; print "✓ Loaded nushell_config.nu" | ansi green } else { print $"WARNING: Configuration file '($config_file)' not found" | ansi yellow }; exit 0
