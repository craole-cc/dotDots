[alias]
  as-cc = !git config user.name \"craole-cc\" && git config user.email \"134658831+craole-cc@users.noreply.github.com\"
  as-craole = !git config user.name \"Craole\" && git config user.email \"32288735+Craole@users.noreply.github.com\"
  as-craolab = !git config user.name \"Craole\" && git config user.email \"8317387-craole@users.noreply.gitlab.com\"
  branch-develop = "!f() { git fetch; git checkout --no-track -b $1 origin/develop; }; f"
  branch-master = "!f() { git fetch; git checkout --no-track -b $1 origin/master; }; f"
  branch-rename = "!f() { git push origin -d $(git branch --show-current); git branch -m $(git branch --show-current) $1; git push-new; }; f"
  cfg-la = "!f() { git cfg-ls | grep alias | cut -c 7-; }; f"
  cfg-lg = cfg-ls --global
  cfg-ll = cfg-ls --local
  cfg-ls = config --list
  cfg-lsys = cfg-ls --system
  cfg-lw = cfg-ls --worktree
  config-list-all = config --list
  config-list-all-origin = config --list --show-origin
  delete-merged-branches = !git branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d
  diff-staged = diff --staged
  diffs = diff-staged
  empty = "!git commit -am\"[empty] Initial commit\" --allow-empty"
  iggy = "!git status --short --ignored"
  ignored = "!git ls-files --others --ignored --exclude-standard"
  last = ll -1
  lg = logdeco --graph
  ll = logdeco --stat
  log-diff-master = logdeco --left-right HEAD...origin/master
  log-diff-upstream = logdeco --left-right HEAD...@{u}
  logdeco = log --pretty=format:\"%C(auto)%h %d %s %C(green)(%an) %C(italic cyan)[%ad]\" --date=relative --decorate
  ls = logdeco --name-status
  push-new = push --set-upstream origin HEAD
  sa = stash apply
  sl = stash list
  ss = stash save
  up = "!f() { git_msg=${*:-Updating}; git pull --quiet; git status --short; git add --all . ; git commit --all --quiet --message=\"$git_msg\"; git push --progress; }; f"
  upignore = "!f() { printf \"%s\" \"Updating ignored files...\"; git_msg=\"${*:-Updated ignored files}\"; git rm -r --cached . >/dev/null 2>&1; git add --all . >/dev/null 2>&1; git commit --quiet --message=\"$git_msg\" >/dev/null 2>&1; git push >/dev/null 2>&1; printf \" %s\\n\" \"complete\"; }; f"
