
[settings]
experimental = true
# lockfile = true
# quiet = true
windows_shim_mode = "symlink"

[tools]
bat = "latest"
# deno = "latest"
eza = "latest"
cargo-binstall = "latest"
"cargo:treefmt" = "latest"
# "cargo:sqruff" = "latest"
# docker-cli = "latest"
# docker-compose = "latest"
# podman = "latest"
# docker-slim = "latest"
jujutsu = "latest"
ripgrep = "latest"
taplo = "latest"
tokei = "latest"
usage = "latest"
# uv = "latest"
watchexec = "latest"
# dust = "latest"
fastfetch = "latest"
cosign = "latest"
# just = "latest"
# typos = "latest"
typst = "latest"
typstyle = "latest"
yamlfmt = "latest"

[env]
PRJ_ROOT = "{{config_root}}"
PRJ_ENV = "{{config_root}}\\environment"
MISE_PROJECT_ROOT = "{{env.PRJ_ROOT}}"
PRJ_NAME = "{{ cwd | basename }}"
DATETIME = "{{ now() | date(format='%Y-%m-%d_%H:%M:%S') }}"
EDITOR = "helix"
PAGER = "bat --color=always --style=plain"

[hooks]
enter = "{{mise_bin}} install --quiet" #TODO: This doesn't seem to do anything
leave = "echo Goodbye!"
postinstall = "mise clean"

[tasks.update]
description = "Update all global tools"
alias = "upd"
run = ["mise self-update", "mise install", "mise upgrade"]

[tasks.clean]
description = "Clean up caches"
alias = "cln"
run = "mise cache prune"

[tasks.info]
description = "Show the information about the project"
alias = "inf"
run = [
  "eza --version",
  "cargo --version",
  "jj --version",
  "rustc --version",
  "tokei --version",
  "treefmt --version",
  "tokei",
  # "{{mise_bin}} files",
]

[tasks.tools]
alias = "reg"
description = "List available tools from the registry filtered by a search term"
usage = '''
arg "pattern" "search pattern to filter tools" default=""
'''
run = "mise registry | rg -- %USAGE_PATTERN%"

[tasks.files]
description = "List the files in the current directory"
alias = "fl"
run = "eza --almost-all --icons=always --long --group-directories-first  --git --git-ignore"

[tasks.tree]
description = "List the files recursively from the current directory"
alias = "ft"
run = "eza --icons --long --group-directories-first --git --tree"

[tasks.lint]
description = "Format the project tree"
alias = "f"
run = [
  "{{mise_bin}} fmt",
  "treefmt --clear-cache --fail-on-change --allow-missing-formatter",
]

[tasks.push]
description = "Push the changes to the main branch"
alias = "up"
run = ["jj describe", "jj bookmark set main --revision=@", "jj git push"]

[tasks.pull]
description = "Pull the changes to the main branch"
alias = "down"
run = ["jj git fetch", "jj rebase --destination main"]

[tasks.jj]
description = "Initialize the repository to use jusutsu"
alias = "jjinit"
run = ["jj git init --colocate", "jj bookmark track main@origin"]

[tasks.cr]
description = "Run a customizable cargo command, defaults to 'cargo run --quiet'"
shell = "powershell"
run = '''
$command = $env:MISE_TASK_ARGS
if (-not $command) {
    $command = "run --quiet"
}
cargo $command
'''

[tasks.cw]
description = "Run 'cargo watch' with a customizable command, defaults to 'run --quiet'"
shell = "powershell"
run = '''
$command = $env:MISE_TASK_ARGS
if (-not $command) {
    $command = "run --quiet"
}
cargo watch --quiet --clear --exec $command
'''

[tasks.cwc]
description = "Run 'cargo watch' with a customizable command, defaults to 'clippy'"
shell = "powershell"
run = '''
$command = $env:MISE_TASK_ARGS
if (-not $command) {
    $command = "clippy"
}
cargo watch --quiet --clear --exec $command
'''

[tasks.clippy]
description = "Run 'cargo clippy' once and route output to error.txt if there are warnings or errors"
shell = "powershell"
run = '''
$clippyOutput = cargo clippy 2>&1 | Out-String
if ($clippyOutput -match "warning|error") {
    $clippyOutput | Out-File -FilePath error.txt
    Write-Output "Clippy output was not clean. Errors/warnings have been written to error.txt."
} else {
    Write-Output "Clippy output is clean. No errors or warnings."
}
'''

[tasks.ct]
description = "Run 'cargo test' with additional arguments, defaults to '--features quickcheck'"
shell = "powershell"
run = '''
$features = $env:MISE_TASK_ARGS
if (-not $features) {
    $features = "quickcheck"
}
cargo test --features $features
'''

[tasks.cwt]
description = "Run 'cargo watch' with a customizable command, defaults to 'test'"
shell = "powershell"
run = '''
$command = $env:MISE_TASK_ARGS
if (-not $command) {
    $command = "test"
}
cargo watch --quiet --clear --exec test $command
'''

[tasks.cwtq]
description = "Run 'cargo watch' with a customizable command, defaults to 'test with quickcheck'"
shell = "powershell"
run = '''
$command = $env:MISE_TASK_ARGS
if (-not $command) {
    $command = "test  --features quickcheck"
}
cargo watch --quiet --clear --exec $command
'''
