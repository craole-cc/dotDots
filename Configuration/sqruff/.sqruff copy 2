# =============================================================================
# SQLFluff Configuration for Microsoft SQL Server (T-SQL)
# =============================================================================
# This configuration is tailored for a strict, modern T-SQL style guide.
# It enforces uppercase keywords, semicolon termination, and readable layouts.
# https://github.com/quarylabs/sqruff/blob/HEAD/crates/lib/src/core/default_config.cfg
# =============================================================================

[sqlfluff]
# Set the dialect to T-SQL for Microsoft SQL Server.
dialect = tsql
# Use the raw templater as we are not using Jinja or dbt.
templater = raw
# A reasonable line length for modern displays.
max_line_length = 120
# Use all available CPU cores for faster linting.
processes = 0
# A comma-separated list of rules to check. `core` is the default set.
rules = core
# Exclude rules that may conflict with common T-SQL practices if necessary.
# exclude_rules = ...

[sqlfluff:indentation]
# Use 4 spaces for indentation, a widely accepted standard.
tab_space_size = 4
# Indenting JOIN clauses makes complex queries much easier to read.
indented_joins = true
# Keep CTEs flush left for clarity at the top of a query.
indented_ctes = false
# Indent the contents of an ON clause for readability.
indented_on_contents = true

[sqlfluff:layout:type:binary_operator]
# Place operators at the start of a new line for alignment and readability.
line_position = leading

[sqlfluff:layout:type:comparison_operator]
# Place operators at the start of a new line.
line_position = leading

# =============================================================================
# RULE CONFIGURATION
# =============================================================================

[sqlfluff:rules]
# Allow scalar functions in SELECT statements without an alias.
allow_scalar = true
# Enforce consistent use of table aliases.
single_table_references = consistent
# All identifiers should be unquoted unless they are reserved words or contain special chars.
unquoted_identifiers_policy = all

# +----------------------------------------------------------------+
# Capitalisation
# A strong convention in T-SQL is to use UPPERCASE for reserved words.
# +----------------------------------------------------------------+

[sqlfluff:rules:capitalisation.keywords]
capitalisation_policy = upper

[sqlfluff:rules:capitalisation.identifiers]
# For identifiers (tables, columns), `consistent` is flexible.
# Other common options: `upper`, `lower`, `pascal`, `snake`.
extended_capitalisation_policy = consistent

[sqlfluff:rules:capitalisation.functions]
# Built-in function names should be uppercase (e.g., OBJECT_ID, GETDATE).
extended_capitalisation_policy = upper

[sqlfluff:rules:capitalisation.literals]
# NULL, TRUE, FALSE should be uppercase.
capitalisation_policy = upper

[sqlfluff:rules:capitalisation.types]
# Data types (e.g., INT, NVARCHAR, DATETIME) should be uppercase.
extended_capitalisation_policy = upper

# +----------------------------------------------------------------+
# Aliasing
# +----------------------------------------------------------------+

[sqlfluff:rules:aliasing.table]
# Enforce explicit aliasing for clarity. e.g., `table AS t` not `table t`.
aliasing = explicit

[sqlfluff:rules:aliasing.column]
aliasing = explicit

# +----------------------------------------------------------------+
# Conventions
# +----------------------------------------------------------------+

[sqlfluff:rules:convention.terminator]
# Modern T-SQL best practice is to terminate every statement with a semicolon.
# It is required for many modern T-SQL features.
require_final_semicolon = true
multiline_newline = false

[sqlfluff:rules:convention.quoted_literals]
# In T-SQL, single quotes are for string literals. Double quotes are for identifiers.
# This enforces the correct usage.
preferred_quoted_literal_style = single_quotes
force_enable = true

[sqlfluff:rules:convention.casting_style]
# Prefer the ANSI standard `CAST` over T-SQL specific `CONVERT` unless
# `CONVERT` is needed for its style formatting options (e.g., for dates).
preferred_type_casting_style = cast

[sqlfluff:rules:convention.not_equal]
# Prefer the ANSI standard `<>` for "not equal to".
preferred_not_equal_style = not_equal

[sqlfluff:rules:convention.select_trailing_comma]
# Trailing commas in SELECT lists are not supported in T-SQL.
select_clause_trailing_comma = forbid

# +----------------------------------------------------------------+
# References
# +----------------------------------------------------------------+

[sqlfluff:rules:references.quoting]
# Only quote identifiers when necessary (e.g., contains spaces or is a keyword).
prefer_quoted_identifiers = false
