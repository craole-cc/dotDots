#! /bin/sh
# shellcheck disable=SC2034,SC2154,SC1091

#{ Output Control }
: "${DELIMITER:="$(printf "\037")"}" export DELIMITER
: "${VERBOSITY:="$(verbosity "Error" || true)"}"
: "${VERBOSITY_QUIET:="$(verbosity "${VERBOSITY_QUIET}" 0 || true)"}"
: "${VERBOSITY_ERROR:="$(verbosity "${VERBOSITY_ERROR}" 1 || true)"}"
: "${VERBOSITY_WARN:="$(verbosity "${VERBOSITY_WARN}" 2 || true)"}"
: "${VERBOSITY_INFO:="$(verbosity "${VERBOSITY_INFO}" 3 || true)"}"
: "${VERBOSITY_DEBUG:="$(verbosity "${VERBOSITY_DEBUG}" 4 || true)"}"
: "${VERBOSITY_TRACE:="$(verbosity "${VERBOSITY_TRACE}" 5 || true)"}"
export VERBOSITY VERBOSITY_QUIET VERBOSITY_ERROR VERBOSITY_WARN VERBOSITY_INFO VERBOSITY_DEBUG VERBOSITY_TRACE

#{ System Information }
locale="$(locale -uU 2>/dev/null || printf 'en_US.UTF-8')"
: "${SYS_TYPE:="$(os.type.fetch || true)"}"
: "${SYS_NAME:="$(os.distro.fetch || true)"}"
: "${SYS_KERN:="$(os.kernel.fetch || true)"}"
: "${SYS_ARCH:="$(os.arch.fetch || true)"}"
: "${SYS_HOST:="$(hostname.fetch || true)"}"
: "${USER_NAME:="$(get_os_user || true)"}"
: "${USER_LANG="${locale}"}"
: "${USER_SHELL:="$(get_os_shell || true)"}"
: "${SYS_INFO:="${SYS_TYPE} ${SYS_NAME} | ${SYS_KERN} | ${SYS_ARCH} | ${USER_NAME}@${SYS_HOST}"}"
export SYS_TYPE SYS_NAME SYS_KERN SYS_ARCH SYS_HOST SYS_INFO USER_NAME USER_LANG USER_SHELL
USER="${USER_NAME}"
SHELL="${USER_SHELL}"
LOCALE="${USER_LANG}"
export USER SHELL LOCALE

#{ Bin Directories }
: "${DOTS_BIN_BASH:="${DOTS_BIN}/bash"}"
: "${DOTS_BIN_CMD:="${DOTS_BIN}/cmd"}"
: "${DOTS_BIN_NU:="${DOTS_BIN}/nushell"}"
: "${DOTS_BIN_PS:="${DOTS_BIN}/powershell"}"
: "${DOTS_BIN_PY:="${DOTS_BIN}/python"}"
: "${DOTS_BIN_RUST:="${DOTS_BIN}/rust"}"
: "${DOTS_BIN_SH:="${DOTS_BIN}/shellscript"}"
: "${DOTS_BIN_SQL:="${DOTS_BIN}/sql"}"
: "${DOTS_BIN_ZIG:="${DOTS_BIN}/zig"}"
: "${DOTS_BIN_ZSH:="${DOTS_BIN}/zsh"}"
export DOTS_BIN_BASH DOTS_BIN_CMD DOTS_BIN_NU DOTS_BIN_PS DOTS_BIN_PY DOTS_BIN_RUST DOTS_BIN_SH DOTS_BIN_SQL DOTS_BIN_ZIG DOTS_BIN_ZSH

#{ Resource Directories }
: "${DOTS_FONTS:="${DOTS_RES}/Fonts"}"
: "${DOTS_IMAGES:="${DOTS_RES}/Images"}"
: "${DOTS_SCRIPTS:="${DOTS_RES}/Home"}"
: "${DOTS_TEMPLATES:="${DOTS_RES}/Templates"}"
export DOTS_FONTS DOTS_IMAGES DOTS_SCRIPTS DOTS_TEMPLATES

#{ User Directories }
manage_env --init --var DOCUMENTS --val "${HOME}/Documents"
: "${DOCUMENTS:="${HOME}/Documents"}"
: "${DOWNLOADS:="${HOME}/Downloads"}"
: "${MUSIC:="${HOME}/Music"}"
: "${PHOTOS:="${HOME}/Pictures"}"
: "${VIDEOS:="${HOME}/Videos"}"
if [ -d "${PHOTOS}/Wallpapers" ]; then
  WALLPAPERS="$(printf "%s" "${PHOTOS}/Wallpapers")"
elif [ -d "${HOME}/Pictures/wallpapers" ]; then
  WALLPAPERS="$(printf "%s" "${HOME}/Pictures/wallpapers")"
else
  WALLPAPERS="$(printf "%s" "${DOTS_RES}/Images/wallpaper")"
fi
export DOCUMENTS DOWNLOADS MUSIC PHOTOS VIDEOS WALLPAPERS

#{ System Directories }
: "${APPDATA:="${HOME}/AppData"}"
export APPDATA

#{ General }
: "${TIMESTAMP:="$(date +%F_%H-%M-%S)"}"
: "${DOTS_LOADED_APPS:="${DOTS_LOG}/loaded_apps"}"
: "${codeDOTS:="${DOTS_CFG}/vscode/Dotfiles.code-workspace"}"
: "${codeRUST:="${DOTS_CFG}/vscode/Rust.code-workspace"}"
: "${codeNIX:="${DOTS_CFG}/vscode/Nix.code-workspace"}"
: "${KEYMAPS:="${DOTS_CFG}/utilities/sxhkd"}"
: "${ASCII:="${DOTS_RES}/Images/ascii"}"
export TIMESTAMP DOTS_LOADED_APPS codeDOTS codeRUST codeNIX KEYMAPS ASCII

# Optional debug output
if [ "${VERBOSITY}" -ge "${VERBOSITY_DEBUG}" ]; then
  pout-tagged --ctx "Environment Admin" --tag "DEBUG" --msg "$(
    printf "\n%${pad}s%s%s" "DOTS_BIN_BASH" "${sep}" "${DOTS_BIN_BASH}"
    printf "\n%${pad}s%s%s" "DOTS_BIN_CMD" "${sep}" "${DOTS_BIN_CMD}"
    printf "\n%${pad}s%s%s" "DOTS_BIN_NU" "${sep}" "${DOTS_BIN_NU}"
    printf "\n%${pad}s%s%s" "DOTS_BIN_PS" "${sep}" "${DOTS_BIN_PS}"
    printf "\n%${pad}s%s%s" "DOTS_BIN_PY" "${sep}" "${DOTS_BIN_PY}"
    printf "\n%${pad}s%s%s" "DOTS_BIN_RUST" "${sep}" "${DOTS_BIN_RUST}"
    printf "\n%${pad}s%s%s" "DOTS_BIN_SH" "${sep}" "${DOTS_BIN_SH}"
    printf "\n%${pad}s%s%s" "DOTS_BIN_SQL" "${sep}" "${DOTS_BIN_SQL}"
    printf "\n%${pad}s%s%s" "DOTS_BIN_ZIG" "${sep}" "${DOTS_BIN_ZIG}"
    printf "\n%${pad}s%s%s" "DOTS_BIN_ZSH" "${sep}" "${DOTS_BIN_ZSH}"
    printf "\n%${pad}s%s%s" "DOTS_FONTS" "${sep}" "${DOTS_FONTS}"
    printf "\n%${pad}s%s%s" "DOTS_IMAGES" "${sep}" "${DOTS_IMAGES}"
    printf "\n%${pad}s%s%s" "DOTS_SCRIPTS" "${sep}" "${DOTS_SCRIPTS}"
    printf "\n%${pad}s%s%s" "DOTS_TEMPLATES" "${sep}" "${DOTS_TEMPLATES}"
    printf "\n%${pad}s%s%s" "DOCUMENTS" "${sep}" "${DOCUMENTS}"
    printf "\n%${pad}s%s%s" "DOWNLOADS" "${sep}" "${DOWNLOADS}"
    printf "\n%${pad}s%s%s" "MUSIC" "${sep}" "${MUSIC}"
    printf "\n%${pad}s%s%s" "PHOTOS" "${sep}" "${PHOTOS}"
    printf "\n%${pad}s%s%s" "VIDEOS" "${sep}" "${VIDEOS}"
    printf "\n%${pad}s%s%s" "WALLPAPERS" "${sep}" "${WALLPAPERS}"
    printf "\n%${pad}s%s%s" "APPDATA" "${sep}" "${APPDATA}"
    printf "\n%${pad}s%s%s" "TIMESTAMP" "${sep}" "${TIMESTAMP}"
    printf "\n%${pad}s%s%s" "DOTS_LOADED_APPS" "${sep}" "${DOTS_LOADED_APPS}"
    printf "\n%${pad}s%s%s" "codeDOTS" "${sep}" "${codeDOTS}"
    printf "\n%${pad}s%s%s" "codeRUST" "${sep}" "${codeRUST}"
    printf "\n%${pad}s%s%s" "codeNIX" "${sep}" "${codeNIX}"
    printf "\n%${pad}s%s%s" "KEYMAPS" "${sep}" "${KEYMAPS}"
    printf "\n%${pad}s%s%s" "ASCII" "${sep}" "${ASCII}"
  )"
fi
