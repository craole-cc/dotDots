#!/bin/sh

main() {
  init_env
  parse_arguments "$@"
  execute_process
  drop_env
}

init_env() {
  _cmd="$(command -v treefmt 2>&1)"
  _cfg="$DOTS_CFG/treefmt/treefmt.toml"
  _root="$(pwd)"
  _ci=true
  _args="--allow-missing-formatter"
  _dry=
}

drop_env() {
  unset _cmd _cfg _root _ci _args
}

parse_arguments() {
  while [ "$#" -ge 1 ]; do
    case "$1" in
    --config)
      [ "$2" ] || {
        printf "Error: Config file not specified." >&2
        exit 1
      }

      _cfg="$2"
      shift
      ;;
    --root)
      [ "$2" ] || {
        printf "Error: Root directory not specified." >&2
        exit 1
      }

      [ -d "$2" ] || {
        printf "Error: Root directory not found." >&2
        exit 1
      }

      _args="${_args:+$_args }--tree-root $2"
      shift
      ;;
    --debug | --dry*)
      _dry=true
      ;;
    *)
      _args="${_args:+$_args }$1"
      ;;
    esac
    shift
  done
}

execute_process() {
  #@ Validate command
  [ "$_cmd" ] || {
    printf "Error: treefmt not found." >&2
    return 1
  }

  #@ Validate config
  [ "$_cfg" ] && {
    if [ -f "$_cfg" ]; then
      _cfg="--config-file $_cfg"
    else
      printf "Error: Config file not found." >&2
      return 1
    fi
  }

  #@ Validate tree root
  [ "$_root" ] && {
    if [ -d "$_root" ]; then
      _root="--tree-root $_root"
    else
      printf "Error: Root directory not found." >&2
      return 1
    fi
  }

  #@ Add the --ci flag if specified
  [ "$_ci" ] && _args="${_args:+$_args }--ci"

  #@ Build the final command
  _cmd="$(printf "%s %s %s %s" "$_cmd" "$_cfg" "$_root" "$_args")"

  #@ Print command
  printf '\033[1;36m[ INFO ]\033[0m Executing command => %s\n' "$_cmd"

  #@ Run command
  [ "$_dry" ] || eval "$_cmd"
}

main "$@"
