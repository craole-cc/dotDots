#!/bin/sh

# Usage: ./search_git_history.sh <search-string>
# Example: ./search_git_history.sh umport

set -eu

SEARCH_TERM=${1?Usage: $0 <search-string>}

printf 'Searching for %s across all branches and commits...\n' "${SEARCH_TERM}"

# Get all branches (local and remote), remove duplicates and whitespace
branches=$(git for-each-ref --format='%(refname:short)' refs/heads refs/remotes | sort -u)

for branch in ${branches}; do
  printf '\nChecking branch: %s\n' "${branch}"

  # List all commits in the branch
  commits=$(git rev-list "${branch}")

  # Iterate commits
  for commit in ${commits}; do
    # Check if the commit diff contains the search term
    if git show "${commit}" | grep -q -- "${SEARCH_TERM}"; then
      printf 'Found "%s" in commit %s on branch %s\n' "${SEARCH_TERM}" "${commit}" "${branch}"
      # Show commit summary and affected files (limit output to first 10 lines)
      git show --oneline --name-only "${commit}" | head -n 10
    fi
  done
done

printf '\nSearch complete.\n'
