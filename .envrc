#!/bin/sh

#~@ Ensure Bin scripts are available within the dev shell
initialize_bin() {
  #~@ Define configuration
  BIN_ROOT="Bin"
  BIN_DEPTH=10
  BIN_IGNORE="review tmp archive"
  DOTS_PATH=""
  dir_count=0

  #~@ Filter binary directories
  if command -v fdx >/dev/null 2>&1; then
    #~@ Build fd command with multiple --exclude flags dynamically
    fd_cmd="fd --type d --max-depth $((BIN_DEPTH * 2)) . ${BIN_ROOT}"
    for dir in ${BIN_IGNORE}; do
      fd_cmd="${fd_cmd} --exclude ${dir}"
    done
    BIN_DIRS=$(eval "${fd_cmd}")
  else
    #~@ Fallback to find with grep
    BIN_IGNORE_PATTERN=$(printf "%s" "${BIN_IGNORE}" | tr ' ' '|')
    BIN_DIRS="$(find "${BIN_ROOT}" -maxdepth "${BIN_DEPTH}" -type d |
      grep -v -E "/(${BIN_IGNORE_PATTERN})$")"
  fi

  #~@ Add all matching directories to PATH
  for dir in ${BIN_DIRS:-}; do
    #~@ Skip if directory doesn't exist.
    [ -d "${dir}" ] || continue

    #~@ Skip if already in PATH
    case ":${PATH}:${DOTS_PATH}:" in ":${dir}:") ;; *)
      # PATH_add "$dir"
      DOTS_PATH="${DOTS_PATH:+"${DOTS_PATH}:"}${dir}"
      dir_count=$((dir_count + 1))
      ;;
    esac
  done

  if [ -z "${DOTS_PATH:-}" ]; then :; else
    printf "%s\n" "${DOTS_PATH}" | tr ":" "\n"
    printf "Added %s directories to PATH" "${dir_count:-0}"
  fi
}

#~@ Initialize the bin scripts
# initialize_bin

#~@ Reload direnv on change
# watch_dir . #TODO: This is way too slow

#~@ Initialize the flake
if command -v nix >/dev/null 2>&1; then
  use flake . --no-pure-eval || use nix
fi
